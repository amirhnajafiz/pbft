syntax = "proto3";
package apaxos;

import "google/protobuf/empty.proto";

option go_package = "./rpc/pbft";

// creating rpc services for transactions and pbft.
// this service is for handling internal node calls for performing pbft.
service PBFT {
  rpc Request(RequestMsg) returns (google.protobuf.Empty) {}
  rpc PrePrepare(PrePrepareMsg) returns (google.protobuf.Empty) {}
  rpc Prepare(PrepareMsg) returns (google.protobuf.Empty) {}
  rpc Commit(CommitMsg) returns (google.protobuf.Empty) {}
  rpc Reply(ReplyMsg) returns (google.protobuf.Empty) {}
  
  rpc Transaction(TransactionMsg) returns (TransactionRsp) {}
  rpc PrintLog(google.protobuf.Empty) returns (stream LogRsp) {}
  rpc PrintDB(google.protobuf.Empty) returns (stream DBRsp) {}
  rpc PrintStatus(StatusMsg) returns (StatusRsp) {}
  rpc PrintView(google.protobuf.Empty) returns (ViewRsp) {}
}

// defining request status enum
enum RequestStatus {
  REQUEST_STATUS_UNSPECIFIED = 0;
  REQUEST_STATUS_PP = 1;
  REQUEST_STATUS_P = 2;
  REQUEST_STATUS_C = 3;
  REQUEST_STATUS_E = 4;
}

// defining messages that are used in PBFT service
message TransactionMsg {
  string sender = 1;
  string reciever = 2;
  int64 amount = 3;
}

message RequestMsg {
  TransactionMsg transaction = 1;
  int64 timestamp = 2;
  int64 sequence_number = 3;
  string client_id = 4;
  string node_id = 5;
  RequestStatus status = 6;
}

message PrePrepareMsg {
  int64 view = 1;
  string digest = 2;
  RequestMsg request = 3;
  string node_id = 4;
}

message PrepareMsg {
  int64 view = 1;
  int64 sequence_number = 2;
  string digest = 3;
  string node_id = 4;
}

message CommitMsg {
  int64 view = 1;
  int64 sequence_number = 2;
  string digest = 3;
  string node_id = 4;
}

message ReplyMsg {
  int64 view = 1;
  int64 timestamp = 2;
  string client_id = 3;
  string node_id = 4;
  string response = 5;
}

message StatusMsg {
  int64 sequence_number = 1;
}

message LogRsp {

}

message DBRsp {

}

message StatusRsp {

}

message ViewRsp {

}

message TransactionRsp {
  string text = 1;
}
